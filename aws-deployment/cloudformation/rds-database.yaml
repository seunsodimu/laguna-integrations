AWSTemplateFormatVersion: '2010-09-09'
Description: 'RDS MySQL Database for Laguna Integrations'

Parameters:
  ProjectName:
    Type: String
    Default: 'laguna-integrations'
    Description: 'Project name for resource naming'
  
  Environment:
    Type: String
    Default: 'production'
    AllowedValues: ['production', 'staging', 'development']
    Description: 'Environment name'

  DBInstanceClass:
    Type: String
    Default: 'db.t3.micro'
    AllowedValues: ['db.t3.micro', 'db.t3.small', 'db.t3.medium']
    Description: 'RDS instance class'

  DBAllocatedStorage:
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 100
    Description: 'Database allocated storage in GB'

  DBMasterUsername:
    Type: String
    Default: 'admin'
    Description: 'Database master username'

  DBMasterPassword:
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 41
    Description: 'Database master password (8-41 characters)'

Resources:
  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub '${ProjectName}-${Environment}-db-subnet-group'
      DBSubnetGroupDescription: 'Subnet group for RDS database'
      SubnetIds:
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-PrivateSubnet1-ID'
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-PrivateSubnet2-ID'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db-subnet-group'
        - Key: Environment
          Value: !Ref Environment

  # DB Parameter Group
  DBParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Family: mysql8.0
      Description: 'Parameter group for MySQL 8.0'
      Parameters:
        innodb_buffer_pool_size: '{DBInstanceClassMemory*3/4}'
        max_connections: 100
        slow_query_log: 1
        long_query_time: 2
        log_queries_not_using_indexes: 1
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-db-params'

  # RDS Instance
  Database:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      DBInstanceIdentifier: !Sub '${ProjectName}-${Environment}-db'
      DBInstanceClass: !Ref DBInstanceClass
      Engine: mysql
      EngineVersion: '8.0.35'
      AllocatedStorage: !Ref DBAllocatedStorage
      StorageType: gp2
      StorageEncrypted: true
      
      DBName: 'laguna_integration'
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterPassword
      
      VPCSecurityGroups:
        - Fn::ImportValue: !Sub '${ProjectName}-${Environment}-DBSG-ID'
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBParameterGroupName: !Ref DBParameterGroup
      
      BackupRetentionPeriod: 7
      PreferredBackupWindow: '03:00-04:00'
      PreferredMaintenanceWindow: 'sun:04:00-sun:05:00'
      
      MultiAZ: false  # Set to true for production high availability
      PubliclyAccessible: false
      
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt RDSEnhancedMonitoringRole.Arn
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      
      DeletionProtection: true  # Set to false for development
      
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-database'
        - Key: Environment
          Value: !Ref Environment

  # Enhanced Monitoring Role
  RDSEnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole'
      Path: /

  # CloudWatch Alarms
  DatabaseCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-${Environment}-db-cpu-high'
      AlarmDescription: 'Database CPU utilization is too high'
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref Database
      AlarmActions:
        - !Ref DatabaseAlarmTopic

  DatabaseConnectionAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ProjectName}-${Environment}-db-connections-high'
      AlarmDescription: 'Database connection count is too high'
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 80
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref Database
      AlarmActions:
        - !Ref DatabaseAlarmTopic

  # SNS Topic for Database Alarms
  DatabaseAlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${ProjectName}-${Environment}-db-alarms'
      DisplayName: 'Database Alarms'

Outputs:
  DatabaseEndpoint:
    Description: 'RDS Database Endpoint'
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: !Sub '${ProjectName}-${Environment}-DB-Endpoint'

  DatabasePort:
    Description: 'RDS Database Port'
    Value: !GetAtt Database.Endpoint.Port
    Export:
      Name: !Sub '${ProjectName}-${Environment}-DB-Port'

  DatabaseName:
    Description: 'Database Name'
    Value: 'laguna_integration'
    Export:
      Name: !Sub '${ProjectName}-${Environment}-DB-Name'